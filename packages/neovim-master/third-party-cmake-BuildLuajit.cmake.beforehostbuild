diff -uNr neovim-master.orig/third-party/patches/luajit-tmpdir.patch neovim-master/third-party/patches/luajit-tmpdir.patch
-- neovim-master.orig/third-party/patches/luajit-tmpdir.patch	1970-01-01 03:00:00.000000000 +0300
+++ neovim-master/third-party/patches/luajit-tmpdir.patch	2020-06-07 17:32:07.584702884 +0300
@@ -0,0 +1,29 @@
+diff -uNr LuaJIT-2.1.0-beta3/src/lib_os.c LuaJIT-2.1.0-beta3.mod/src/lib_os.c
+--- LuaJIT-2.1.0-beta3/src/lib_os.c	2017-05-01 22:03:01.000000000 +0300
++++ LuaJIT-2.1.0-beta3.mod/src/lib_os.c	2020-06-07 16:58:03.086422851 +0300
+@@ -81,9 +81,9 @@
+   return 0;
+ #else
+ #if LJ_TARGET_POSIX
+-  char buf[15+1];
++  char buf[sizeof("/data/data/com.termux/files/usr")+16];
+   int fp;
+-  strcpy(buf, "/tmp/lua_XXXXXX");
++  strcpy(buf, "/data/data/com.termux/files/usr/tmp/lua_XXXXXX");
+   fp = mkstemp(buf);
+   if (fp != -1)
+     close(fp);
+diff -uNr LuaJIT-2.1.0-beta3/src/lj_trace.c LuaJIT-2.1.0-beta3.mod/src/lj_trace.c
+--- LuaJIT-2.1.0-beta3/src/lj_trace.c	2017-05-01 22:03:01.000000000 +0300
++++ LuaJIT-2.1.0-beta3.mod/src/lj_trace.c	2020-06-07 16:58:42.242740925 +0300
+@@ -107,8 +107,8 @@
+   lj_assertX(startpc >= proto_bc(pt) && startpc < proto_bc(pt) + pt->sizebc,
+        "trace PC out of range");
+   lineno = lj_debug_line(pt, proto_bcpos(pt, startpc));
+   if (!fp) {
+-    char fname[40];
+-    sprintf(fname, "/tmp/perf-%d.map", getpid());
++    char fname[sizeof("/data/data/com.termux/files/usr")+40];
++    sprintf(fname, "/data/data/com.termux/files/usr/tmp/perf-%d.map", getpid());
+     if (!(fp = fopen(fname, "w"))) return;
+     setlinebuf(fp);
+   }
